# -*- coding: utf-8 -*-
"""cafe_data_reasearch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aPtcWQNq7H4XqEmaKiW43ThS2mDrzYzg

#import 설정
"""





import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import folium
from folium.features import CustomIcon
from folium import Circle
from folium import Rectangle
# from folium.plugin import

"""folium docs :
>https://python-visualization.github.io/folium/modules.html#folium.vector_layers.path_options
"""

from google.colab import drive
drive.mount('/content/drive')

# 위도
latitude = 35.14109848899933
# 경도
longitude = 126.93086889764577

"""위도-경도 좌표 뽑아오기 : 
>https://map.kakao.com/<br>
>https://xn--yq5bk9r.com/blog/map-coordinates

#0. folium test.
"""

m = folium.Map(location=[latitude, longitude],
               zoom_start=15.5, 
               width=600, 
               height=370
              )
m

# 커스텀 아이콘 생성
image_ganyu = '/content/drive/MyDrive/Colab Notebooks/CD2/image/ganyu.png'
#shadow_image1 = '/content/drive/MyDrive/Colab Notebooks/CD2/image/Eula2.png'

icon_ganyu = CustomIcon(
    image_ganyu,
    icon_size=(75, 75),
    icon_anchor=(37, 42),
    #shadow_image=shadow_image1,
    #shadow_size=(70, 65),
    #shadow_anchor=(-10, -2),
    popup_anchor=(30, -30)
)

marker1 = folium.Marker(
    location=[latitude, longitude],
    icon=icon_ganyu,
    popup=folium.Popup("감우쟝", max_width='100')
)
m.add_child(marker1)

"""marker의 Icon  :
>https://soohee410.github.io/folium_pengsoo
"""

# 이렇게도 쓸 수 있음
'''
folium.Marker([latitude, longitude],
              popup="조선대학교",
              tooltip="조선대학교 내부",
              icon=folium.Icon('green', icon='star')
              ).add_to(m)
m
'''

folium.CircleMarker([latitude, longitude],
                    color='lightblue',
                    radius = 50, 
                    tooltip='감우 zone').add_to(m)
m

# 사용자 위치 확인
from folium import plugins
plugins.LocateControl().add_to(m)
m

"""#1. 유동인구 데이터(데이터 가공) : df, sub_df"""

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CD2/flow_people.csv',thousands = ',' ,encoding='utf-16')
df.head(3)

pd.Series(df.columns)

df.shape

# 지저분한 컬럼명 변경
df_new = df.rename(columns={'유동인구좌표 1':'위도', 'Unnamed: 1':'경도'})
df_new.head(5)

# 기준년월이 08월인 데이터(최신 데이터만)
sub_df = df_new.loc[df['기준년월'].isin(['08월'])]
sub_df.head(3)

m2 = folium.Map(
    location=[latitude, longitude],
    tiles='cartodbpositron',
    zoom_start=15.5)

coords = sub_df[['위도', '경도']]

m2

# x좌표(위도),y좌표(경도) 리스트로 만들기
x = []
y = []
for i in range(len(sub_df['위도'])): # '위도' 행의 개수만큼 반복
    if sub_df['위도'][i] == 0.0 or sub_df['경도'][i] == 0.0: # 문제가 있는 좌표의 경우
        pass
    else:
        x.append(sub_df['위도'][i])
        y.append(sub_df['경도'][i])
        
print('x갯수: ',len(x))
print('y갯수: ',len(y))

# 유동인구별로 색을 변경시켜줄 함수
def color_producer(val):
    if val <= 500:
        return 'gray'
    elif val <= 1000:
        return 'cadetblue'
    elif val <= 1500:
        return 'green'
    elif val <= 2000:
        return 'orange'
    elif val <= 10000:
        return 'red'
    else:
        return 'pink'

"""#2. 유동인구 데이터(Circle) : m2"""

m2 = folium.Map(
    location=[latitude, longitude],
    tiles='cartodbpositron',
    zoom_start=15.5)

for i in range(0,len(x)):
    Circle(
        location=[x[i], y[i]],
        radius=15,
        weight=1.5,
        color=color_producer(sub_df.iloc[i]['유동인구수'])).add_to(m2)

m2

"""#3. 유동인구 데이터(Rectangle) : m3"""

m3 = folium.Map(
    location=[35.160401301291145, 126.8793103153359],
    tiles='cartodbpositron',
    zoom_start=15.5)
plugins.LocateControl().add_to(m3)


for i in range(0,len(x)-1):
    points=[[sub_df['위도'][i], sub_df['경도'][i]],
            [sub_df['위도'][i]-0.00045, sub_df['경도'][i]+0.00055]
             ]

    Rectangle(bounds=points, 
              # stroke=False,
              weight=0.3,
              opacity=0.6,
              color=color_producer(sub_df.iloc[i]['유동인구수']), 
              fill=True, 
              fill_color=color_producer(sub_df.iloc[i]['유동인구수']), 
              fill_opacity=0.2).add_to(m3)

m3

"""#4. choropleth를 사용햐여 그래프 형식으로 사용하는 방법"""

# 그래프 형식으로 순위를 쭉 매겨서 차트를 작성하는 방법
# ** 검증되지 않음 **
# ** 테스트 X **
'''mx.choropleth(geo_data=seoul_geo,
             data=seoul_group_data, 
             fill_color='YlOrRd', # 색상 변경도 가능하다
             fill_opaScity=0.5,
             line_opacity=0.2,
             key_on='properties.name',
             legend_name="지역구별 커피 업종 수"
            )
'''

"""#5. 카페 위치정보(데이터 가공) : df2, sub_df2"""

df2 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CD2/광주광역시_카페정보.csv', encoding='cp949')
# read_csv의 option : usecols=['좌표정보(x)','좌표정보(y)', '사업장명']

df2.head(3)

"""use_cols() :
>https://jimmy-ai.tistory.com/226
"""

# string에서 경위도 변환을 하면 오류가 생기기 때문에,
# string을 제외한 실수값을 float 형으로 변환시켜 저장
sub_df2 = df2.copy()

# 에러 무시와 함께 실수형으로
sub_df2[['좌표정보(x)']] = sub_df2[['좌표정보(x)']].apply(pd.to_numeric, errors = 'coerce')
sub_df2[['좌표정보(y)']] = sub_df2[['좌표정보(y)']].apply(pd.to_numeric, errors = 'coerce')
sub_df2[['소재지면적']] = sub_df2[['소재지면적']].apply(pd.to_numeric, errors = 'coerce')
sub_df2.dtypes

"""pd.to_numeric() : 
>https://cosmosproject.tistory.com/30<br>
>https://rfriend.tistory.com/470
"""

# 좌표계 변환을 위한 API 인스톨
!pip install pyproj
from pyproj import Proj, transform

# 중부원점(EPSG:2097)을 경위도(GPS가 사용, WGS84) 로 변환하는 코드
# 국토교통부에서는 중부원점 좌표계를 사용한다고 한다
proj_1 = Proj(init='epsg:2097')
proj_2 = Proj(init='epsg:4326')

converted = transform(proj_1, proj_2, 
                      sub_df2['좌표정보(x)'].values, 
                      sub_df2['좌표정보(y)'].values, 
                      sub_df2['소재지면적'].values)

sub_df2['좌표정보(x)'] = converted[0]
sub_df2['좌표정보(y)'] = converted[1]
sub_df2['소재지면적'] = converted[2]

"""EPSG, WGS84 :
>https://dabid.tistory.com/3
"""

sub_df2 = sub_df2.fillna(0)
sub_df2.sample(2)

""".fillna() :
>https://rfriend.tistory.com/262

#6. 카페 위치정보(Circle) : m4
"""

# 카페 평수별로 상대적인 원 크기를 리턴해주는 함수
def size_producer(space):
  ans = space/8
  if ans < 1:
    return 1
  elif ans < 4:
    return 4
  elif ans > 7:
    return 7

# 카페 위치를 평수에 따라 원 크기로 나타내고,
# 원을 클릭하면 팝업으로 상호명, 주소를 출력해주는 서비스.
m4 = folium.Map(
    location=[latitude, longitude],
    tiles='cartodbpositron',
    zoom_start=15.5)
plugins.LocateControl().add_to(m4)


for index, row in sub_df2.iterrows():
    # generate the popup message that is shown on click.
    popup_text = "<pre>{}<br> 위도: {:s}<br> 경도: {:s}"
    popup_text = popup_text.format(
                      index,
                      row["사업장명"],
                      row["도로명전체주소"])

    #죄표정보 x와 경도, y와 위도가 반대로 매칭되어있어, 서로 바꿔주어야 함
    folium.CircleMarker(location=(row["좌표정보(y)"],
                                  row["좌표정보(x)"]),
                        radius= size_producer(row["소재지면적"]),
                        weight=0.7,
                        #color="#007849",
                        color="purple",
                        opacity=0.5,
                        popup=popup_text,
                        fill=True,
                        fill_opacity=0.05).add_to(m4)
  
m4

"""popup과 row 관련 간결한 코드 :
>https://github.com/python-visualization/folium/issues/1010

#7. 유동인구 데이터 + 카페 위치정보
> 지도에 두 가지 데이터 욱여넣기
"""

# 데이터 파트

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CD2/flow_people.csv',thousands = ',' ,encoding='utf-16')
df.head(3)

# 지저분한 컬럼명 변경
df_new = df.rename(columns={'유동인구좌표 1':'위도', 'Unnamed: 1':'경도'})
df_new.head(5)
# 기준년월이 08월인 데이터
sub_df = df_new.loc[df['기준년월'].isin(['08월'])]
sub_df.head(3)
# 유동인구별로 색을 변경시켜줄 함수
def color_producer(val):
    if val <= 500:
        return 'gray'
    elif val <= 1000:
        return 'cadetblue'
    elif val <= 1500:
        return 'green'
    elif val <= 2000:
        return 'orange'
    elif val <= 10000:
        return 'red'
    else:
        return 'pink'

# 그리는 파트
m5 = folium.Map(
    location=[latitude, longitude],
    tiles='cartodbpositron',
    zoom_start=15.5)
plugins.LocateControl().add_to(m5)

x = []
y = []
for i in range(len(sub_df['위도'])): # '위도' 행의 개수만큼 반복
    if sub_df['위도'][i] == 0.0 or sub_df['경도'][i] == 0.0: # 문제가 있는 좌표의 경우
        pass
    else:
        x.append(sub_df['위도'][i])
        y.append(sub_df['경도'][i])

for i in range(0,len(x)-1):
    points=[[sub_df['위도'][i], sub_df['경도'][i]],
            [sub_df['위도'][i]+0.00045, sub_df['경도'][i]+0.00055]
             ]

    Rectangle(bounds=points, 
              # stroke=False,
              weight=0.3,
              opacity=0.6,
              color=color_producer(sub_df.iloc[i]['유동인구수']), 
              fill=True, 
              fill_color=color_producer(sub_df.iloc[i]['유동인구수']), 
              fill_opacity=0.12).add_to(m5)

    
for index, row in sub_df2.iterrows():
    popup_text2 = "<pre>{}<br> 위도: {:s}<br> 경도: {:s}"
    popup_text2 = popup_text2.format(
                      index,
                      row["사업장명"],
                      row["도로명전체주소"])

    #죄표정보 x와 경도, y와 위도가 반대로 매칭되어있어, 서로 바꿔주어야 함
    folium.CircleMarker(location=(row["좌표정보(y)"],
                                  row["좌표정보(x)"]),
                        radius= size_producer(row["소재지면적"]),
                        weight=0.7,
                        #color="#007849",
                        color="#6A5ACD",
                        opacity=0.7,
                        popup=popup_text2,
                        fill=True,
                        fill_opacity=0.05).add_to(m5)


m5

"""RGB 색상표 : 
>https://www.rapidtables.org/ko/web/color/RGB_Color.html

#8. 광주광역시 쓰레기통 배치 현황(데이터가공) : df3, df4
"""

# 광산구 쓰레기통 배치현황
df3 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CD2/광주광역시 광산구_쓰레기통 현황_20221108.csv',encoding='cp949')
df3.sample(2)

#서구 쓰레기통 배치 현황
df4 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/CD2/광주광역시 서구_쓰레기통 현황_20221117.csv',encoding='cp949')
df4.sample(2)

# 재사용성이 높은 코드인 것 같아서, 
# df 내부의 object값을 num으로 변환해주는 코드 제작

# df(데이터프레임) 하나, 어떤 열을 변환할 것인지 하나.
def df_to_num(df, str):
  return df[[str]].apply(pd.to_numeric, errors = 'coerce')

# df3의 위도, 경도의 데이터 타입을
# 문자열에서 실수로 변경
sub_df3 = df3.copy()

sub_df3[['위도']] = df_to_num(df3, '위도')
sub_df3[['경도']] = df_to_num(df3, '경도')
sub_df3.dtypes

# df4의 위도, 경도의 데이터 타입을
# 문자열에서 실수로 변경
sub_df4 = df4.copy()

sub_df4[['위도']] = df_to_num(df4, '위도')
sub_df4[['경도']] = df_to_num(df4, '경도')
sub_df4.dtypes

# 광주광역시의 중앙 좌표
center_lat = 35.17054715390964
center_lon = 126.85940475296732

"""#9. 광주광역시 쓰레기통 배치 현황(Marker) : m6"""

m6 = folium.Map(
    location=[center_lat, center_lon],
    tiles='cartodbpositron',
    zoom_start=12)
plugins.LocateControl().add_to(m6)

# 커스텀 아이콘 생성
image_trash = '/content/drive/MyDrive/Colab Notebooks/CD2/image/trash.png'
#shadow_image1 = '/content/drive/MyDrive/Colab Notebooks/CD2/image/Eula2.png'


# 광산구 쓰레기통 위치정보 추가
for index, row in sub_df3.iterrows():
    # generate the popup message that is shown on click.
    popup_text3 = "<pre>{}<br> 행정동: {:s}<br> 세부위치: {:s}"
    popup_text3 = popup_text3.format(
                      index,
                      row["행정동"],
                      row[" 세부위치"])

    # 대체 왜 아이콘 선언문이 for문 밖으로만 나가면 동작을 안하지?
    # 당연히 해야하는거 아닌가??
    icon_trash = CustomIcon(
        image_trash,
        icon_size=(20, 20),
        icon_anchor=(15, 15),
        popup_anchor=(15, -15)
    )
    folium.Marker(
        location=[row['위도'], row['경도']],
        icon=icon_trash,
        popup=folium.Popup(popup_text3)
    ).add_to(m6)

m6

# 서구 쓰레기통 위치정보 추가
for index, row in sub_df4.iterrows():
    # generate the popup message that is shown on click.
    popup_text4 = "<pre>{}<br> 행정동: {:s}<br> 세부위치: {:s}"
    popup_text4 = popup_text4.format(
                      index,
                      row["행정동"],
                      row["세부위치"])

    icon_trash = CustomIcon(
        image_trash,
        icon_size=(20, 20),
        icon_anchor=(15, 15),
        popup_anchor=(15, -15)
    )
    folium.Marker(
        location=[row['위도'], row['경도']],
        icon=icon_trash,
        popup=folium.Popup(popup_text4)
    ).add_to(m6)

m6

"""#10. 데이터 중간 점검"""

# 광산구 쓰레기통 위치정보 추가
for index, row in sub_df3.iterrows():
    # generate the popup message that is shown on click.
    popup_text3 = "<pre>{}<br> 행정동: {:s}<br> 세부위치: {:s}"
    popup_text3 = popup_text3.format(
                      index,
                      row["행정동"],
                      row[" 세부위치"])

    # 대체 왜 아이콘 선언문이 for문 밖으로만 나가면 동작을 안하지?
    # 당연히 해야하는거 아닌가??
    icon_trash = CustomIcon(
        image_trash,
        icon_size=(20, 20),
        icon_anchor=(15, 15),
        popup_anchor=(15, -15)
    )
    folium.Marker(
        location=[row['위도'], row['경도']],
        icon=icon_trash,
        popup=folium.Popup(popup_text3)
    ).add_to(m5)
for index, row in sub_df4.iterrows():
    # generate the popup message that is shown on click.
    popup_text4 = "<pre>{}<br> 행정동: {:s}<br> 세부위치: {:s}"
    popup_text4 = popup_text4.format(
                      index,
                      row["행정동"],
                      row["세부위치"])

    icon_trash = CustomIcon(
        image_trash,
        icon_size=(20, 20),
        icon_anchor=(15, 15),
        popup_anchor=(15, -15)
    )
    folium.Marker(
        location=[row['위도'], row['경도']],
        icon=icon_trash,
        popup=folium.Popup(popup_text4)
    ).add_to(m5)
    
m5

